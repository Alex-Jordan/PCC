# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Evaluate area formula for a trapezoid.
#
# Last edited by Yao 1/22/2017
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Problem Solving with Equations')
## KEYWORDS('area','perimeter','rectangle')
## DBCCSS('4.MD.3')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "parserNumberWithUnits.pl",
  "PCCmacros.pl",
  "PGcourse.pl",
);

##############################################

$refreshCachedImages = 1;
Context("Numeric");


$baseDown = random(13,18,1);
$baseUp = random(5,$baseDown-3,1);
$height = random(8,12,1);

# Make a 20px buffer. Overall pixel width is 240.
# So trapezoid's pixel width needs to be 200.
# Trapezoid's scaled width is $baseDown.
# So set $xmax = $baseDown*240/200.
# Overall pixel height, H, needs to be calculated.
# (H-40)/$height = 200/$baseDown
# So H = 200*$height/$baseDown + 40
# Trapezoid's pixel height needs to be 200*$height/$baseDown.
# So $ymax = $height*(200*$height/$baseDown + 40)/(200*$height/$baseDown)


$xmin = 0;         #The viewing window
$xmax = $baseDown*240/200;
$ymin = 0;
$ymax = $height*(1+40/(200*$height/$baseDown));

$topStart = random(($xmax-$baseDown)/2+1,($xmax+$baseDown)/2-$baseUp-1,1);
$topStop = $topStart+$baseUp;

@x = (($xmax-$baseDown)/2,$topStart,$topStop,($xmax+$baseDown)/2);
@y = (($ymax-$height)/2,($ymax+$height)/2);

$cornersize = min(($x[3]-$x[0]),($y[1]-$y[0]))/10;

$picture = init_graph($xmin,$ymin,$xmax,$ymax,
      pixels=>[240,240*$ymax/$xmax]);

$picture->lb( new Label(($x[0]+$x[3])/2, $y[0],"b1",'black','center','top'));
$picture->lb( new Label(($x[1]+$x[2])/2, $y[1],"b2",'black','center','bottom'));
$picture->lb( new Label($x[1],($y[0]+$y[1])/2,"h",'black','left','middle'));

$picture->new_color("lightblue", 200,200,255); # RGB
$picture->new_color("darkblue",  100,100,255); 

$picture->moveTo($x[0],$y[0]);
$picture->lineTo($x[3],$y[0], darkblue,3);
$picture->lineTo($x[2],$y[1], darkblue,3); 
$picture->lineTo($x[1],$y[1], darkblue,3);
$picture->lineTo($x[0],$y[0], darkblue,3);

$picture->moveTo($x[1]+$cornersize,$y[0]);
$picture->lineTo($x[1]+$cornersize,$y[0]+$cornersize, darkblue,3);
$picture->lineTo($x[1],$y[0]+$cornersize, darkblue,3);

$picture->moveTo($x[1],$y[1]);
$picture->lineTo($x[1],$y[0], darkblue,1,"dashed");


$area = 1/2*($baseDown+$baseUp)*$height;
$baseDownU = NumberWithUnits("$baseDown m");
$baseUpU = NumberWithUnits("$baseUp m");
$heightU = NumberWithUnits("$height m");
$areaU = NumberWithUnits("$area m^2");

$alt = "a trapezoid with the bottom base marked as b1, top base marked as b2 and height marked as h";

##############################################

TEXT(beginproblem());

BEGIN_PGML

A trapezoid's area can be calculated by the formula [`A=\frac{1}{2}(b_1+b_2)h`], where [`A`] stands for area, [`b_1`] for the first base's length, [`b_2`] for the second base's length, and [`h`] for height.

>>[@ image(insertGraph( $picture  ), width=>240, extra_html_tags => "alt = '$alt' title = '$alt' ") @]*<<


Use the formulas to calculate the trapezoid's area. Its first base's length is [`[$baseDownU]`], its second base's length is [`[$baseUpU]`] and its height is [`[$heightU]`]. [@KeyboardInstructions(q!(Use [|m|]* for meters and [|m^2|]* for square meters.)!)@]**

    Area = [____________]{$areaU}


END_PGML

##############################################

$s1 = $area/$height;

BEGIN_PGML_SOLUTION

We will substitute [`b_1=[$baseDownU]`], [`b_2=[$baseUpU]`] and [`h=[$heightU]`] into a trapezoid's area formula:

[``\begin{aligned}
   A  &= \frac{1}{2}(b_1+b_2)h \\
       & = \frac{1}{2}([$baseDown]+[$baseUp])[$height] \\
       & = \frac{1}{2}([$baseDown+$baseUp])[$height] \\
       & = [$s1]\cdot[$height] \\
       & = [$area]
     \end{aligned}``]

The trapezoid's area is [` [$areaU] `].


END_PGML_SOLUTION

ENDDOCUMENT();
