# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Find missing side with two given similar triangles.
#
# Last edited by Carl Yao 3/1/2017
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Problem Solving with Equations')
## KEYWORDS('area','perimeter','triangle')
## DBCCSS('6.G.1')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "parserNumberWithUnits.pl",
  "PGcourse.pl",
);

##############################################

Context("Numeric");

@sides = ([5,12,13],[8,15,17],[7,24,25]);
$index = random(0,2,1);

@baseShort = ();
@baseLong = ();
@hypotenuse = ();

$baseShort[1] = $sides[$index][0];
$baseLong[1] = $sides[$index][1];
$hypotenuse[1] = $sides[$index][2];

$ratio = random(2.5,5.5,1);
$baseShort[0] = $ratio*$baseShort[1];
$baseLong[0] = $ratio*$baseLong[1];
$hypotenuse[0] = $ratio*$hypotenuse[1];

$cushion = 15;

$xmin = 0;         #The viewing window
$xmax = $baseLong[0]+2*$cushion;
$ymin = 0;
$ymax = $baseLong[0]+$baseLong[1]+3*$cushion;

$smallShift = $xmax/35;
$bigShift = $xmax/15;

@cx = ();
@cy = ();
@ax = ();
@ay = ();
@bx = ();
@by = ();
@acxShift = ();
@acyShift = ();
@bcxShift = ();
@bcyShift = ();

$cy[0][0] = $cushion;
$cy[0][1] = $cushion;
$cy[0][2] = $cushion+$baseLong[0];
$cy[0][3] = $cushion+$baseLong[0];
$cy[0][4] = $cushion+$baseLong[0];
$cy[0][5] = $cushion+$baseLong[0];
$cy[0][6] = $cushion;
$cy[0][7] = $cushion;

$cy[1][0] = $baseLong[0]+2*$cushion;
$cy[1][1] = $baseLong[0]+2*$cushion;
$cy[1][2] = $baseLong[0]+2*$cushion+$baseLong[1];
$cy[1][3] = $baseLong[0]+2*$cushion+$baseLong[1];
$cy[1][4] = $baseLong[0]+2*$cushion+$baseLong[1];
$cy[1][5] = $baseLong[0]+2*$cushion+$baseLong[1];
$cy[1][6] = $baseLong[0]+2*$cushion;
$cy[1][7] = $baseLong[0]+2*$cushion;

for my $i (0..1) {
   $cx[$i][0] = ($xmax-$baseShort[$i])/2;
   $cx[$i][1] = ($xmax-$baseLong[$i])/2;
   $cx[$i][2] = ($xmax-$baseLong[$i])/2;
   $cx[$i][3] = ($xmax-$baseShort[$i])/2;
   $cx[$i][4] = ($xmax+$baseShort[$i])/2;
   $cx[$i][5] = ($xmax+$baseLong[$i])/2;
   $cx[$i][6] = ($xmax+$baseLong[$i])/2;
   $cx[$i][7] = ($xmax+$baseShort[$i])/2;

   $ax[$i][0] = $cx[$i][0]+$baseShort[$i];
   $ax[$i][1] = $cx[$i][1];
   $ax[$i][2] = $cx[$i][2];
   $ax[$i][3] = $cx[$i][3]+$baseShort[$i];
   $ax[$i][4] = $cx[$i][4]-$baseShort[$i];
   $ax[$i][5] = $cx[$i][5];
   $ax[$i][6] = $cx[$i][6];
   $ax[$i][7] = $cx[$i][7]-$baseShort[$i];

   $ay[$i][0] = $cy[$i][0];
   $ay[$i][1] = $cy[$i][1]+$baseShort[$i];
   $ay[$i][2] = $cy[$i][2]-$baseShort[$i];
   $ay[$i][3] = $cy[$i][3];
   $ay[$i][4] = $cy[$i][4];
   $ay[$i][5] = $cy[$i][5]-$baseShort[$i];
   $ay[$i][6] = $cy[$i][6]+$baseShort[$i];
   $ay[$i][7] = $cy[$i][7];

   $bx[$i][0] = $cx[$i][0];
   $bx[$i][1] = $cx[$i][1]+$baseLong[$i];
   $bx[$i][2] = $cx[$i][2]+$baseLong[$i];
   $bx[$i][3] = $cx[$i][3];
   $bx[$i][4] = $cx[$i][4];
   $bx[$i][5] = $cx[$i][5]-$baseLong[$i];
   $bx[$i][6] = $cx[$i][6]-$baseLong[$i];
   $bx[$i][7] = $cx[$i][7];

   $by[$i][0] = $cy[$i][0]+$baseLong[$i];
   $by[$i][1] = $cy[$i][1];
   $by[$i][2] = $cy[$i][2];
   $by[$i][3] = $cy[$i][3]-$baseLong[$i];
   $by[$i][4] = $cy[$i][4]-$baseLong[$i];
   $by[$i][5] = $cy[$i][5];
   $by[$i][6] = $cy[$i][6];
   $by[$i][7] = $cy[$i][7]+$baseLong[$i];

   $acxShift[$i][0] = 0;
   $acxShift[$i][1] = -$bigShift;
   $acxShift[$i][2] = -$bigShift;
   $acxShift[$i][3] = 0;
   $acxShift[$i][4] = 0;
   $acxShift[$i][5] = $bigShift;
   $acxShift[$i][6] = $bigShift;
   $acxShift[$i][7] = 0;

   $acyShift[$i][0] = -$smallShift;
   $acyShift[$i][1] = 0;
   $acyShift[$i][2] = 0;
   $acyShift[$i][3] = $smallShift;
   $acyShift[$i][4] = $smallShift;
   $acyShift[$i][5] = 0;
   $acyShift[$i][6] = 0;
   $acyShift[$i][7] = -$smallShift;

   $bcxShift[$i][0] = -$bigShift;
   $bcxShift[$i][1] = 0;
   $bcxShift[$i][2] = 0;
   $bcxShift[$i][3] = -$bigShift;
   $bcxShift[$i][4] = $bigShift;
   $bcxShift[$i][5] = 0;
   $bcxShift[$i][6] = 0;
   $bcxShift[$i][7] = $bigShift;

   $bcyShift[$i][0] = 0;
   $bcyShift[$i][1] = -$smallShift;
   $bcyShift[$i][2] = $smallShift;
   $bcyShift[$i][3] = 0;
   $bcyShift[$i][4] = 0;
   $bcyShift[$i][5] = $smallShift;
   $bcyShift[$i][6] = -$smallShift;
   $bcyShift[$i][7] = $smallShift;

   $abxPosition[$i][0] = ($ax[$i][0]+$bx[$i][0])/2+$bigShift;
   $abxPosition[$i][1] = ($cx[$i][1]+$bx[$i][1])/2+$bigShift;
   $abxPosition[$i][2] = ($cx[$i][2]+$bx[$i][2])/2+$bigShift;
   $abxPosition[$i][3] = ($ax[$i][3]+$bx[$i][3])/2+$bigShift;
   $abxPosition[$i][4] = ($ax[$i][4]+$bx[$i][4])/2-$bigShift;
   $abxPosition[$i][5] = ($cx[$i][5]+$bx[$i][5])/2-$bigShift;
   $abxPosition[$i][6] = ($cx[$i][6]+$bx[$i][6])/2-$bigShift;
   $abxPosition[$i][7] = ($ax[$i][7]+$bx[$i][7])/2-$bigShift;

   $abyShift[$i][0] = $smallShift;
   $abyShift[$i][1] = $smallShift;
   $abyShift[$i][2] = -$smallShift;
   $abyShift[$i][3] = -$smallShift;
   $abyShift[$i][4] = -$smallShift;
   $abyShift[$i][5] = -$smallShift;
   $abyShift[$i][6] = $smallShift;
   $abyShift[$i][7] = $smallShift;
}

$picture = init_graph($xmin,$ymin,$xmax,$ymax,
      pixels=>[400,400]);

@orientation = ();
$orientation[0] = random(0,7,1);
do {$orientation[1] = random(0,7,1);} until ($orientation[0]!=$orientation[1]);


$picture->lb( new Label( 
   ($ax[0][$orientation[0]]+$cx[0][$orientation[0]])/2+$acxShift[0][$orientation[0]], 
   ($ay[0][$orientation[0]]+$cy[0][$orientation[0]])/2+$acyShift[0][$orientation[0]], 
   "$baseShort[0] in",'black','center','middle'));
$picture->lb( new Label( 
   ($bx[0][$orientation[0]]+$cx[0][$orientation[0]])/2+$bcxShift[0][$orientation[0]], 
   ($by[0][$orientation[0]]+$cy[0][$orientation[0]])/2+$bcyShift[0][$orientation[0]],
   "$baseLong[0] in",'black','center','middle'));
$picture->lb( new Label( 
   $abxPosition[0][$orientation[0]], 
   ($ay[0][$orientation[0]]+$by[0][$orientation[0]])/2+$abyShift[0][$orientation[0]],
   "x in",'black','center','middle'));

$picture->lb( new Label( 
   ($ax[1][$orientation[1]]+$cx[1][$orientation[1]])/2+$acxShift[1][$orientation[1]], 
   ($ay[1][$orientation[1]]+$cy[1][$orientation[1]])/2+$acyShift[1][$orientation[1]], 
   "y in",'black','center','middle'));
$picture->lb( new Label( 
   ($bx[1][$orientation[1]]+$cx[1][$orientation[1]])/2+$bcxShift[1][$orientation[1]], 
   ($by[1][$orientation[1]]+$cy[1][$orientation[1]])/2+$bcyShift[1][$orientation[1]],
   "$baseLong[1] in",'black','center','middle'));
$picture->lb( new Label( 
   $abxPosition[1][$orientation[1]], 
   ($ay[1][$orientation[1]]+$by[1][$orientation[1]])/2+$abyShift[1][$orientation[1]],
   "$hypotenuse[1] in",'black','center','middle'));


$picture->new_color("darkblue",  100,100,255); 

for my $i (0..1) {
   $picture->moveTo($ax[$i][$orientation[$i]],$ay[$i][$orientation[$i]]);
   $picture->lineTo($bx[$i][$orientation[$i]],$by[$i][$orientation[$i]], darkblue,3);
   $picture->lineTo($cx[$i][$orientation[$i]],$cy[$i][$orientation[$i]], darkblue,3);
   $picture->lineTo($ax[$i][$orientation[$i]],$ay[$i][$orientation[$i]], darkblue,3);
}


$text = "There are two triangles. The one on the top is smaller, and the one at the bottom is larger. Both triangles have unequal sides. For the top triangle, its shortest side is marked as y in, its second shortest side is marked as $baseLong[1] in, and its longest side is marked as $hypotenuse[1] in. For the bottom triangle, its shortest side is marked as $baseShort[0] in, its second shortest side is marked as $baseLong[0] in, and its longest side is marked as x in.";

$ans0 = $hypotenuse[0];
$ans0U = NumberWithUnits("$ans0 in");

$ans1 = $baseShort[1];
$ans1U = NumberWithUnits("$ans1 in");

##############################################
$refreshCachedImages = 1;
TEXT(beginproblem());

BEGIN_PGML

The following two triangles are similar to each other. Find the length of the missing sides.

>>[@ image(insertGraph( $picture  ), tex_size=>400, height=>400, width=>400, extra_html_tags => "alt = '$text' title = '$text' ") @]*<<

Use *in* for inches.

Lengths of the missing sides are:

    [``x=``][__________]{$ans0U}

    [``y=``][__________]{$ans1U}

END_PGML

##############################################

BEGIN_PGML_SOLUTION

If two shapes are similar to each other, the lengths of their corresponding sides are in proportion. 

First, we write an equation and solve for [`x`]:

    [``
\begin{aligned}
   \frac{x}{[$hypotenuse[1]]} &= \frac{[$baseLong[0]]}{[$baseLong[1]]} \\
   \mathbf{[$hypotenuse[1]]\cdot[$baseLong[1]]\cdot} \frac{x}{[$hypotenuse[1]]} &= \mathbf{[$hypotenuse[1]]\cdot[$baseLong[1]]\cdot} \frac{[$baseLong[0]]}{[$baseLong[1]]} \\
   [$baseLong[1]]x &= [$hypotenuse[1]]\cdot[$baseLong[0]] \\
   [$baseLong[1]]x &= [$hypotenuse[1]*$baseLong[0]] \\
   \frac{[$baseLong[1]]x}{[$baseLong[1]]} &= \frac{[$hypotenuse[1]*$baseLong[0]]}{[$baseLong[1]]} \\
   x &= [$ans0]
\end{aligned}
    ``]

Next, we write an equation and solve for [`y`]:

    [``
\begin{aligned}
   \frac{y}{[$baseShort[0]]} &= \frac{[$baseLong[1]]}{[$baseLong[0]]} \\
   \mathbf{[$baseShort[0]]\cdot[$baseLong[0]]\cdot} \frac{y}{[$baseShort[0]]} &= \mathbf{[$baseShort[0]]\cdot[$baseLong[0]]\cdot} \frac{[$baseLong[1]]}{[$baseLong[0]]} \\
   [$baseLong[0]]y &= [$baseShort[0]]\cdot[$baseLong[1]] \\
   [$baseLong[0]]y &= [$baseShort[0]*$baseLong[1]] \\
   \frac{[$baseLong[0]]y}{[$baseLong[0]]} &= \frac{[$baseShort[0]*$baseLong[1]]}{[$baseLong[0]]} \\
   y &= [$ans1]
\end{aligned}
    ``]

Lengths of the missing sides are:

    [``x=[$ans0U]``]

    [``y=[$ans1U]``]

END_PGML_SOLUTION

ENDDOCUMENT();
