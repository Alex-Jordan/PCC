# WeBWorK problem written by Carl Yao
# Portland Community College
#
# Find missing side with two given similar triangles.
#
# Last edited by Carl Yao 3/1/2017
#
# ENDDESCRIPTION

## DBsubject('Algebra')
## DBchapter('Basic Algebra')
## DBsection('Problem Solving with Equations')
## KEYWORDS('area','perimeter','triangle')
## DBCCSS('6.G.1')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')
## Author('Alex Jordan, Carl Yao, Chris Hughes')
## Institution('PCC')

##############################################

DOCUMENT();

loadMacros(
  "PGgraphmacros.pl",
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "parserNumberWithUnits.pl",
  "PGcourse.pl",
);

##############################################

Context("Numeric");

@sides = ([5,12,13],[8,15,17],[7,24,25]);
$index = random(0,2,1);

@baseShort = ();
@baseLong = ();
@hypotenuse = ();

$baseShort[1] = $sides[$index][0];
$baseLong[1] = $sides[$index][1];
$hypotenuse[1] = $sides[$index][2];

$ratio = random(2.5,5.5,1);
$baseShort[0] = $ratio*$baseShort[1];
$baseLong[0] = $ratio*$baseLong[1];
$hypotenuse[0] = $ratio*$hypotenuse[1];

$cushion = 15;

$xmin = 0;         #The viewing window
$xmax = $baseLong[0]+2*$cushion;
$ymin = 0;
$ymax = $baseLong[0]+2*$cushion;

$smallShift = $xmax/40;
$bigShift = $xmax/15;

@cx = ();
@cy = ();
@ax = ();
@ay = ();
@bx = ();
@by = ();
@acxShift = ();
@acyShift = ();
@bcxShift = ();
@bcyShift = ();

$cy[0][0] = $cushion;
$cy[0][1] = $cushion;
$cy[0][2] = $cushion+$baseLong[0];
$cy[0][3] = $cushion+$baseLong[0];
$cy[0][4] = $cushion+$baseLong[0];
$cy[0][5] = $cushion+$baseLong[0];
$cy[0][6] = $cushion;
$cy[0][7] = $cushion;

$cy[1][0] = $baseLong[0]+$cushion;
$cy[1][1] = $baseShort[0]+$cushion;
$cy[1][2] = $cy[0][2]-$baseShort[0];
$cy[1][3] = $cushion;
$cy[1][4] = $cushion;
$cy[1][5] = $cy[0][5]-$baseShort[0];
$cy[1][6] = $baseShort[0]+$cushion;
$cy[1][7] = $baseLong[0]+$cushion;

$cx[0][0] = ($xmax-$baseShort[0])/2;
$cx[0][1] = ($xmax-$baseLong[0])/2;
$cx[0][2] = ($xmax-$baseLong[0])/2;
$cx[0][3] = ($xmax-$baseShort[0])/2;
$cx[0][4] = ($xmax+$baseShort[0])/2;
$cx[0][5] = ($xmax+$baseLong[0])/2;
$cx[0][6] = ($xmax+$baseLong[0])/2;
$cx[0][7] = ($xmax+$baseShort[0])/2;

$cx[1][0] = ($xmax+$baseShort[0])/2;
$cx[1][1] = ($xmax+$baseLong[0])/2;
$cx[1][2] = ($xmax+$baseLong[0])/2;
$cx[1][3] = ($xmax+$baseShort[0])/2;
$cx[1][4] = ($xmax-$baseShort[0])/2;
$cx[1][5] = ($xmax-$baseLong[0])/2;
$cx[1][6] = ($xmax-$baseLong[0])/2;
$cx[1][7] = ($xmax-$baseShort[0])/2;

$ax[0][0] = $cx[0][0]+$baseShort[0];
$ax[0][1] = $cx[0][1];
$ax[0][2] = $cx[0][2];
$ax[0][3] = $cx[0][3]+$baseShort[0];
$ax[0][4] = $cx[0][4]-$baseShort[0];
$ax[0][5] = $cx[0][5];
$ax[0][6] = $cx[0][6];
$ax[0][7] = $cx[0][7]-$baseShort[0];

$ax[1][0] = $cx[1][0]-$baseShort[1];
$ax[1][1] = $cx[1][1];
$ax[1][2] = $cx[1][2];
$ax[1][3] = $cx[1][3]-$baseShort[1];
$ax[1][4] = $cx[1][4]+$baseShort[1];
$ax[1][5] = $cx[1][5];
$ax[1][6] = $cx[1][6];
$ax[1][7] = $cx[1][7]+$baseShort[1];

$ay[0][0] = $cy[0][0];
$ay[0][1] = $cy[0][1]+$baseShort[0];
$ay[0][2] = $cy[0][2]-$baseShort[0];
$ay[0][3] = $cy[0][3];
$ay[0][4] = $cy[0][4];
$ay[0][5] = $cy[0][5]-$baseShort[0];
$ay[0][6] = $cy[0][6]+$baseShort[0];
$ay[0][7] = $cy[0][7];

$ay[1][0] = $cy[1][0];
$ay[1][1] = $cy[1][1]-$baseShort[1];
$ay[1][2] = $cy[1][2]+$baseShort[1];
$ay[1][3] = $cy[1][3];
$ay[1][4] = $cy[1][4];
$ay[1][5] = $cy[1][5]+$baseShort[1];
$ay[1][6] = $cy[1][6]-$baseShort[1];
$ay[1][7] = $cy[1][7];

$bx[0][0] = $cx[0][0];
$bx[0][1] = $cx[0][1]+$baseLong[0];
$bx[0][2] = $cx[0][2]+$baseLong[0];
$bx[0][3] = $cx[0][3];
$bx[0][4] = $cx[0][4];
$bx[0][5] = $cx[0][5]-$baseLong[0];
$bx[0][6] = $cx[0][6]-$baseLong[0];
$bx[0][7] = $cx[0][7];

$bx[1][0] = $cx[1][0];
$bx[1][1] = $cx[1][1]-$baseLong[1];
$bx[1][2] = $cx[1][2]-$baseLong[1];
$bx[1][3] = $cx[1][3];
$bx[1][4] = $cx[1][4];
$bx[1][5] = $cx[1][5]+$baseLong[1];
$bx[1][6] = $cx[1][6]+$baseLong[1];
$bx[1][7] = $cx[1][7];

$by[0][0] = $cy[0][0]+$baseLong[0];
$by[0][1] = $cy[0][1];
$by[0][2] = $cy[0][2];
$by[0][3] = $cy[0][3]-$baseLong[0];
$by[0][4] = $cy[0][4]-$baseLong[0];
$by[0][5] = $cy[0][5];
$by[0][6] = $cy[0][6];
$by[0][7] = $cy[0][7]+$baseLong[0];

$by[1][0] = $cy[1][0]-$baseLong[1];
$by[1][1] = $cy[1][1];
$by[1][2] = $cy[1][2];
$by[1][3] = $cy[1][3]+$baseLong[1];
$by[1][4] = $cy[1][4]+$baseLong[1];
$by[1][5] = $cy[1][5];
$by[1][6] = $cy[1][6];
$by[1][7] = $cy[1][7]-$baseLong[1];

for my $i (0..1) {
   $acxShift[$i][0] = 0;
   $acxShift[$i][1] = (-1)**($i+1)*$bigShift;
   $acxShift[$i][2] = (-1)**($i+1)*$bigShift;
   $acxShift[$i][3] = 0;
   $acxShift[$i][4] = 0;
   $acxShift[$i][5] = (-1)**$i*$bigShift;
   $acxShift[$i][6] = (-1)**$i*$bigShift;
   $acxShift[$i][7] = 0;

   $acyShift[$i][0] = (-1)**($i+1)*$smallShift;
   $acyShift[$i][1] = 0;
   $acyShift[$i][2] = 0;
   $acyShift[$i][3] = (-1)**$i*$smallShift;
   $acyShift[$i][4] = (-1)**$i*$smallShift;
   $acyShift[$i][5] = 0;
   $acyShift[$i][6] = 0;
   $acyShift[$i][7] = (-1)**($i+1)*$smallShift;

   $bcxShift[$i][0] = (-1)**($i+1)*$bigShift;
   $bcxShift[$i][1] = 0;
   $bcxShift[$i][2] = 0;
   $bcxShift[$i][3] = (-1)**($i+1)*$bigShift;
   $bcxShift[$i][4] = (-1)**$i*$bigShift;
   $bcxShift[$i][5] = 0;
   $bcxShift[$i][6] = 0;
   $bcxShift[$i][7] = (-1)**$i*$bigShift;

   $bcyShift[$i][0] = 0;
   $bcyShift[$i][1] = (-1)**($i+1)*$smallShift;
   $bcyShift[$i][2] = (-1)**$i*$smallShift;
   $bcyShift[$i][3] = 0;
   $bcyShift[$i][4] = 0;
   $bcyShift[$i][5] = (-1)**$i*$smallShift;
   $bcyShift[$i][6] = (-1)**($i+1)*$smallShift;
   $bcyShift[$i][7] = 0;
}

$picture = init_graph($xmin,$ymin,$xmax,$ymax,
      pixels=>[400,400]);

@orientation = ();
$orientation[0] = random(0,7,1);
if ( ($orientation[0]==0) || ($orientation[0]==1) ) {$orientation[1] = list_random(0,1);}
if ( ($orientation[0]==2) || ($orientation[0]==3) ) {$orientation[1] = list_random(2,3);}
if ( ($orientation[0]==4) || ($orientation[0]==5) ) {$orientation[1] = list_random(4,5);}
if ( ($orientation[0]==6) || ($orientation[0]==7) ) {$orientation[1] = list_random(6,7);}

$picture->lb( new Label( 
   ($ax[0][$orientation[0]]+$cx[0][$orientation[0]])/2+$acxShift[0][$orientation[0]], 
   ($ay[0][$orientation[0]]+$cy[0][$orientation[0]])/2+$acyShift[0][$orientation[0]], 
   "x ft",'black','center','middle'));
$picture->lb( new Label( 
   ($bx[0][$orientation[0]]+$cx[0][$orientation[0]])/2+$bcxShift[0][$orientation[0]], 
   ($by[0][$orientation[0]]+$cy[0][$orientation[0]])/2+$bcyShift[0][$orientation[0]],
   "$baseLong[0] ft",'black','center','middle'));

$picture->lb( new Label( 
   ($ax[1][$orientation[1]]+$cx[1][$orientation[1]])/2+$acxShift[1][$orientation[1]], 
   ($ay[1][$orientation[1]]+$cy[1][$orientation[1]])/2+$acyShift[1][$orientation[1]], 
   "$baseShort[1] ft",'black','center','middle'));
$picture->lb( new Label( 
   ($bx[1][$orientation[1]]+$cx[1][$orientation[1]])/2+$bcxShift[1][$orientation[1]], 
   ($by[1][$orientation[1]]+$cy[1][$orientation[1]])/2+$bcyShift[1][$orientation[1]],
   "$baseLong[1] ft",'black','center','middle'));


$picture->new_color("darkblue",  100,100,255); 

for my $i (0..1) {
   $picture->moveTo($ax[$i][$orientation[$i]],$ay[$i][$orientation[$i]]);
   $picture->lineTo($bx[$i][$orientation[$i]],$by[$i][$orientation[$i]], darkblue,3);
   $picture->lineTo($cx[$i][$orientation[$i]],$cy[$i][$orientation[$i]], darkblue,3);
   $picture->lineTo($ax[$i][$orientation[$i]],$ay[$i][$orientation[$i]], darkblue,3);
}


$text = "There are two triangles. The one on the top is smaller, and the one at the bottom is larger. Both triangles have unequal sides. For the top triangle, its shortest side is marked as $baseShort[1] ft, and its second shortest side is marked as $baseLong[1] ft. For the bottom triangle, its shortest side is marked as x ft, and its second shortest side is marked as $baseLong[0] ft.";

$ans = $baseShort[0];
$ansU = NumberWithUnits("$ans ft");

##############################################
$refreshCachedImages = 1;
TEXT(beginproblem());

BEGIN_PGML

The following two triangles are similar to each other. Find the length of the missing side.

>>[@ image(insertGraph( $picture  ), tex_size=>400, height=>400, width=>400, extra_html_tags => "alt = '$text' title = '$text' ") @]*<<

Use *ft* for feet.

The missing side's length is [__________]{$ansU}

END_PGML

##############################################

BEGIN_PGML_SOLUTION

If two shapes are similar to each other, the lengths of their corresponding sides are in proportion. We can write an equation and solve for [`x`]:

    [``
\begin{aligned}
   \frac{x}{[$baseShort[1]]} &= \frac{[$baseLong[0]]}{[$baseLong[1]]} \\
   \mathbf{[$baseShort[1]]\cdot[$baseLong[1]]\cdot} \frac{x}{[$baseShort[1]]} &= \mathbf{[$baseShort[1]]\cdot[$baseLong[1]]\cdot} \frac{[$baseLong[0]]}{[$baseLong[1]]} \\
   [$baseLong[1]]x &= [$baseShort[1]]\cdot[$baseLong[0]] \\
   [$baseLong[1]]x &= [$baseShort[1]*$baseLong[0]] \\
   \frac{[$baseLong[1]]x}{[$baseLong[1]]} &= \frac{[$baseShort[1]*$baseLong[0]]}{[$baseLong[1]]} \\
   x &= [$baseShort[0]]
\end{aligned}
    ``]

*Solution:* The length of the missing side is [`[$ansU]`].

END_PGML_SOLUTION

ENDDOCUMENT();
